<Activity mc:Ignorable="sap sap2010" x:Class="TestCase_Authentification_MyAubay" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1196,2154.6666666666665" sap2010:WorkflowViewState.IdRef="TestCase_Authentification_MyAubay_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TestCase_Authentification_MyAubay" sap:VirtualizedContainerService.HintSize="574,2090" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Bienvenue" />
      <Variable x:TypeArguments="x:String" Name="LogoMyAubay" />
      <Variable x:TypeArguments="x:String" Name="ChampID" />
      <Variable x:TypeArguments="x:String" Name="ChampPwd" />
      <Variable x:TypeArguments="x:String" Name="ButtonConnexion" />
      <Variable x:TypeArguments="x:String" Name="Version" />
      <Variable x:TypeArguments="x:String" Name="Url" />
      <Variable x:TypeArguments="x:String" Name="Pwd" />
      <Variable x:TypeArguments="x:String" Name="Email" />
      <Variable x:TypeArguments="x:String" Name="ConnexionText" />
      <Variable x:TypeArguments="ss:SecureString" Name="MyPassword" />
      <Variable x:TypeArguments="x:String" Name="ID" />
      <Variable x:TypeArguments="x:Boolean" Name="BanniereExists" />
      <Variable x:TypeArguments="x:String" Name="Bannieres" />
      <Variable x:TypeArguments="x:String" Name="Deconnexion" />
      <Variable x:TypeArguments="x:String" Name="TextDeco" />
      <Variable x:TypeArguments="x:String" Name="Annuler" />
      <Variable x:TypeArguments="x:String" Name="Confirmer" />
      <Variable x:TypeArguments="x:Boolean" Name="AvatarExpÃªcted" />
      <Variable x:TypeArguments="x:String" Name="MyPwd" />
      <Variable x:TypeArguments="x:String" Name="ConnexionTextExpected" />
      <Variable x:TypeArguments="x:String" Name="ChampPwdExpected" />
      <Variable x:TypeArguments="x:String" Name="ChampIDExpected" />
      <Variable x:TypeArguments="x:String" Name="BienvenueTextExpected" />
      <Variable x:TypeArguments="x:String" Name="LogoMyAubayExpected" />
      <Variable x:TypeArguments="x:String" Name="ConfirmerExpected" />
      <Variable x:TypeArguments="x:String" Name="AnnulerExpected" />
      <Variable x:TypeArguments="x:String" Name="TextDecoExpected" />
      <Variable x:TypeArguments="x:String" Name="DeconnexionExpected" />
      <Variable x:TypeArguments="x:Boolean" Name="AvatarExists" />
      <Variable x:TypeArguments="x:String" Name="AvatarText" />
      <Variable x:TypeArguments="x:String" Name="AvatarTextExpected" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="512,610" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="422.6666666666667,499.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Url]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">https://family.aubay.com/admin/</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[LogoMyAubayExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["logo MyAubay"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[BienvenueTextExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["Bienvenue sur MyAubay"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ChampIDExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["Identifiant ou adresse e-mail Aubay"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ChampPwdExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["password"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ConnexionTextExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["CONNEXION"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ID]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["sdelarue"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[MyPwd]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">sdelarue</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="ss:SecureString">[MyPassword]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="ss:SecureString">[(new System.Net.NetworkCredential("", MyPwd)).SecurePassword]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DeconnexionExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["DÃ©connexion"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[TextDecoExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Ãtes-vous sÃ»r de vouloir vous dÃ©connecter ?</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[AnnulerExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["ANNULER"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ConfirmerExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">["CONFIRMER"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[AvatarTextExpected]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">avatar</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="512,226" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Authentification_MyAubay.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Authentification_MyAubay.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Bienvenue">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Bienvenue" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_LogoMyAubay">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="LogoMyAubay" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_ChampID">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="ChampID" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_ChampPwd">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="ChampPwd" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_ButtonConnexion">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="ButtonConnexion" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Version">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Version" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Url">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Url" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Pwd">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Pwd" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Email">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Email" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_ConnexionText">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="ConnexionText" />
          </OutArgument>
          <InArgument x:TypeArguments="ss:SecureString" x:Key="in_Pwd">
            <VisualBasicValue x:TypeArguments="ss:SecureString" ExpressionText="MyPassword" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ID">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="ID" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_BanniereExists">
            <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="BanniereExists" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Bannieres">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Bannieres" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Deconnexion">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Deconnexion" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_TextDeco">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TextDeco" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Annuler">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Annuler" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Confirmer">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="Confirmer" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AvatarExists">
            <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="AvatarExists" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_AvatarText">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="AvatarText" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="512,1063.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_7" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[LogoMyAubay]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[LogoMyAubayExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_8" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[Bienvenue.Trim]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[BienvenueTextExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_9" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[ChampID]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[ChampIDExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_10" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[ChampPwd]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[ChampPwdExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_11" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[ButtonConnexion]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[ConnexionTextExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Version" Expression="[Version.Contains(&quot;NumÃ©ro&quot;)]" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpression_3" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpression>
      </Sequence>
      <Sequence DisplayName="Login" sap:VirtualizedContainerService.HintSize="450,703.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify ID MyAubay" Expression="[Not string.IsNullOrWhiteSpace(ID)]" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Password MyAubay" Expression="[Not string.IsNullOrWhiteSpace(MyPwd.ToString)]" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="VerifyExpression_2" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,196.66666666666666" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_5" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[ConnexionText]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[ConnexionTextExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[AvatarText=AvatarTextExpected]" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="VerifyExpression_4" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      </Sequence>
      <Sequence DisplayName="Logout" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[Deconnexion]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[Deconnexion]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_2" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[TextDeco.Trim]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[TextDecoExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_3" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[Annuler]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[AnnulerExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
        <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_4" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
          <uta:VerifyExpressionWithOperator.FirstExpression>
            <InArgument x:TypeArguments="x:String">[Confirmer]</InArgument>
          </uta:VerifyExpressionWithOperator.FirstExpression>
          <uta:VerifyExpressionWithOperator.SecondExpression>
            <InArgument x:TypeArguments="x:String">[ConfirmerExpected]</InArgument>
          </uta:VerifyExpressionWithOperator.SecondExpression>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uta:VerifyExpressionWithOperator>
      </Sequence>
    </Sequence>
  </Sequence>
</Activity>